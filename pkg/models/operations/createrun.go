// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/openai-go-sdk/v3/pkg/models/shared"
	"net/http"
)

type CreateRunRequest struct {
	CreateRunRequest shared.CreateRunRequest `request:"mediaType=application/json"`
	// The ID of the thread to run.
	ThreadID string `pathParam:"style=simple,explode=false,name=thread_id"`
}

func (o *CreateRunRequest) GetCreateRunRequest() shared.CreateRunRequest {
	if o == nil {
		return shared.CreateRunRequest{}
	}
	return o.CreateRunRequest
}

func (o *CreateRunRequest) GetThreadID() string {
	if o == nil {
		return ""
	}
	return o.ThreadID
}

type CreateRunResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	RunObject *shared.RunObject
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *CreateRunResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateRunResponse) GetRunObject() *shared.RunObject {
	if o == nil {
		return nil
	}
	return o.RunObject
}

func (o *CreateRunResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateRunResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
