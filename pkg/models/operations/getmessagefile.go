// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/openai-go-sdk/v4/pkg/models/shared"
	"net/http"
)

type GetMessageFileRequest struct {
	// The ID of the file being retrieved.
	FileID string `pathParam:"style=simple,explode=false,name=file_id"`
	// The ID of the message the file belongs to.
	MessageID string `pathParam:"style=simple,explode=false,name=message_id"`
	// The ID of the thread to which the message and File belong.
	ThreadID string `pathParam:"style=simple,explode=false,name=thread_id"`
}

func (o *GetMessageFileRequest) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

func (o *GetMessageFileRequest) GetMessageID() string {
	if o == nil {
		return ""
	}
	return o.MessageID
}

func (o *GetMessageFileRequest) GetThreadID() string {
	if o == nil {
		return ""
	}
	return o.ThreadID
}

type GetMessageFileResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	MessageFileObject *shared.MessageFileObject
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetMessageFileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetMessageFileResponse) GetMessageFileObject() *shared.MessageFileObject {
	if o == nil {
		return nil
	}
	return o.MessageFileObject
}

func (o *GetMessageFileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetMessageFileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
