// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/openai-go-sdk/v4/pkg/models/shared"
	"net/http"
)

type SubmitToolOuputsToRunRequest struct {
	SubmitToolOutputsRunRequest shared.SubmitToolOutputsRunRequest `request:"mediaType=application/json"`
	// The ID of the run that requires the tool output submission.
	RunID string `pathParam:"style=simple,explode=false,name=run_id"`
	// The ID of the [thread](/docs/api-reference/threads) to which this run belongs.
	ThreadID string `pathParam:"style=simple,explode=false,name=thread_id"`
}

func (o *SubmitToolOuputsToRunRequest) GetSubmitToolOutputsRunRequest() shared.SubmitToolOutputsRunRequest {
	if o == nil {
		return shared.SubmitToolOutputsRunRequest{}
	}
	return o.SubmitToolOutputsRunRequest
}

func (o *SubmitToolOuputsToRunRequest) GetRunID() string {
	if o == nil {
		return ""
	}
	return o.RunID
}

func (o *SubmitToolOuputsToRunRequest) GetThreadID() string {
	if o == nil {
		return ""
	}
	return o.ThreadID
}

type SubmitToolOuputsToRunResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	RunObject *shared.RunObject
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *SubmitToolOuputsToRunResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *SubmitToolOuputsToRunResponse) GetRunObject() *shared.RunObject {
	if o == nil {
		return nil
	}
	return o.RunObject
}

func (o *SubmitToolOuputsToRunResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *SubmitToolOuputsToRunResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
