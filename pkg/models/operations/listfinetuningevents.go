// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/openai-go-sdk/v3/pkg/models/shared"
	"github.com/speakeasy-sdks/openai-go-sdk/v3/pkg/utils"
	"net/http"
)

type ListFineTuningEventsRequest struct {
	// The ID of the fine-tuning job to get events for.
	//
	FineTuningJobID string `pathParam:"style=simple,explode=false,name=fine_tuning_job_id"`
	// Identifier for the last event from the previous pagination request.
	After *string `queryParam:"style=form,explode=true,name=after"`
	// Number of events to retrieve.
	Limit *int64 `default:"20" queryParam:"style=form,explode=true,name=limit"`
}

func (l ListFineTuningEventsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListFineTuningEventsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListFineTuningEventsRequest) GetFineTuningJobID() string {
	if o == nil {
		return ""
	}
	return o.FineTuningJobID
}

func (o *ListFineTuningEventsRequest) GetAfter() *string {
	if o == nil {
		return nil
	}
	return o.After
}

func (o *ListFineTuningEventsRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type ListFineTuningEventsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	ListFineTuningJobEventsResponse *shared.ListFineTuningJobEventsResponse
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *ListFineTuningEventsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListFineTuningEventsResponse) GetListFineTuningJobEventsResponse() *shared.ListFineTuningJobEventsResponse {
	if o == nil {
		return nil
	}
	return o.ListFineTuningJobEventsResponse
}

func (o *ListFineTuningEventsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListFineTuningEventsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
