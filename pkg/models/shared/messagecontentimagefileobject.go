// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImageFile struct {
	// The [File](/docs/api-reference/files) ID of the image in the message content.
	FileID string `json:"file_id"`
}

func (o *ImageFile) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

// MessageContentImageFileObjectType - Always `image_file`.
type MessageContentImageFileObjectType string

const (
	MessageContentImageFileObjectTypeImageFile MessageContentImageFileObjectType = "image_file"
)

func (e MessageContentImageFileObjectType) ToPointer() *MessageContentImageFileObjectType {
	return &e
}

func (e *MessageContentImageFileObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "image_file":
		*e = MessageContentImageFileObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageContentImageFileObjectType: %v", v)
	}
}

// MessageContentImageFileObject - References an image [File](/docs/api-reference/files) in the content of a message.
type MessageContentImageFileObject struct {
	ImageFile ImageFile `json:"image_file"`
	// Always `image_file`.
	Type MessageContentImageFileObjectType `json:"type"`
}

func (o *MessageContentImageFileObject) GetImageFile() ImageFile {
	if o == nil {
		return ImageFile{}
	}
	return o.ImageFile
}

func (o *MessageContentImageFileObject) GetType() MessageContentImageFileObjectType {
	if o == nil {
		return MessageContentImageFileObjectType("")
	}
	return o.Type
}
