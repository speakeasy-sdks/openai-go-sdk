// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssistantToolsCodeType - The type of tool being defined: `code_interpreter`
type AssistantToolsCodeType string

const (
	AssistantToolsCodeTypeCodeInterpreter AssistantToolsCodeType = "code_interpreter"
)

func (e AssistantToolsCodeType) ToPointer() *AssistantToolsCodeType {
	return &e
}

func (e *AssistantToolsCodeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "code_interpreter":
		*e = AssistantToolsCodeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssistantToolsCodeType: %v", v)
	}
}

type AssistantToolsCode struct {
	// The type of tool being defined: `code_interpreter`
	Type AssistantToolsCodeType `json:"type"`
}

func (o *AssistantToolsCode) GetType() AssistantToolsCodeType {
	if o == nil {
		return AssistantToolsCodeType("")
	}
	return o.Type
}
