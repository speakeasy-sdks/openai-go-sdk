// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MessageFileObjectObject - The object type, which is always `thread.message.file`.
type MessageFileObjectObject string

const (
	MessageFileObjectObjectThreadMessageFile MessageFileObjectObject = "thread.message.file"
)

func (e MessageFileObjectObject) ToPointer() *MessageFileObjectObject {
	return &e
}

func (e *MessageFileObjectObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "thread.message.file":
		*e = MessageFileObjectObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageFileObjectObject: %v", v)
	}
}

// MessageFileObject - A list of files attached to a `message`.
type MessageFileObject struct {
	// The Unix timestamp (in seconds) for when the message file was created.
	CreatedAt int64 `json:"created_at"`
	// The identifier, which can be referenced in API endpoints.
	ID string `json:"id"`
	// The ID of the [message](/docs/api-reference/messages) that the [File](/docs/api-reference/files) is attached to.
	MessageID string `json:"message_id"`
	// The object type, which is always `thread.message.file`.
	Object MessageFileObjectObject `json:"object"`
}

func (o *MessageFileObject) GetCreatedAt() int64 {
	if o == nil {
		return 0
	}
	return o.CreatedAt
}

func (o *MessageFileObject) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *MessageFileObject) GetMessageID() string {
	if o == nil {
		return ""
	}
	return o.MessageID
}

func (o *MessageFileObject) GetObject() MessageFileObjectObject {
	if o == nil {
		return MessageFileObjectObject("")
	}
	return o.Object
}
