// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssistantToolsRetrievalType - The type of tool being defined: `retrieval`
type AssistantToolsRetrievalType string

const (
	AssistantToolsRetrievalTypeRetrieval AssistantToolsRetrievalType = "retrieval"
)

func (e AssistantToolsRetrievalType) ToPointer() *AssistantToolsRetrievalType {
	return &e
}

func (e *AssistantToolsRetrievalType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "retrieval":
		*e = AssistantToolsRetrievalType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssistantToolsRetrievalType: %v", v)
	}
}

type AssistantToolsRetrieval struct {
	// The type of tool being defined: `retrieval`
	Type AssistantToolsRetrievalType `json:"type"`
}

func (o *AssistantToolsRetrieval) GetType() AssistantToolsRetrievalType {
	if o == nil {
		return AssistantToolsRetrievalType("")
	}
	return o.Type
}
