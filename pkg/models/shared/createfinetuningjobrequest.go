// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

// CreateFineTuningJobRequestHyperparametersNEpochs1 - The number of epochs to train the model for. An epoch refers to one
// full cycle through the training dataset.
type CreateFineTuningJobRequestHyperparametersNEpochs1 string

const (
	CreateFineTuningJobRequestHyperparametersNEpochs1Auto CreateFineTuningJobRequestHyperparametersNEpochs1 = "auto"
)

func (e CreateFineTuningJobRequestHyperparametersNEpochs1) ToPointer() *CreateFineTuningJobRequestHyperparametersNEpochs1 {
	return &e
}

func (e *CreateFineTuningJobRequestHyperparametersNEpochs1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "auto":
		*e = CreateFineTuningJobRequestHyperparametersNEpochs1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFineTuningJobRequestHyperparametersNEpochs1: %v", v)
	}
}

type CreateFineTuningJobRequestHyperparametersNEpochsType string

const (
	CreateFineTuningJobRequestHyperparametersNEpochsTypeCreateFineTuningJobRequestHyperparametersNEpochs1 CreateFineTuningJobRequestHyperparametersNEpochsType = "CreateFineTuningJobRequest_hyperparameters_n_epochs_1"
	CreateFineTuningJobRequestHyperparametersNEpochsTypeInteger                                           CreateFineTuningJobRequestHyperparametersNEpochsType = "integer"
)

type CreateFineTuningJobRequestHyperparametersNEpochs struct {
	CreateFineTuningJobRequestHyperparametersNEpochs1 *CreateFineTuningJobRequestHyperparametersNEpochs1
	Integer                                           *int64

	Type CreateFineTuningJobRequestHyperparametersNEpochsType
}

func CreateCreateFineTuningJobRequestHyperparametersNEpochsCreateFineTuningJobRequestHyperparametersNEpochs1(createFineTuningJobRequestHyperparametersNEpochs1 CreateFineTuningJobRequestHyperparametersNEpochs1) CreateFineTuningJobRequestHyperparametersNEpochs {
	typ := CreateFineTuningJobRequestHyperparametersNEpochsTypeCreateFineTuningJobRequestHyperparametersNEpochs1

	return CreateFineTuningJobRequestHyperparametersNEpochs{
		CreateFineTuningJobRequestHyperparametersNEpochs1: &createFineTuningJobRequestHyperparametersNEpochs1,
		Type: typ,
	}
}

func CreateCreateFineTuningJobRequestHyperparametersNEpochsInteger(integer int64) CreateFineTuningJobRequestHyperparametersNEpochs {
	typ := CreateFineTuningJobRequestHyperparametersNEpochsTypeInteger

	return CreateFineTuningJobRequestHyperparametersNEpochs{
		Integer: &integer,
		Type:    typ,
	}
}

func (u *CreateFineTuningJobRequestHyperparametersNEpochs) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	createFineTuningJobRequestHyperparametersNEpochs1 := new(CreateFineTuningJobRequestHyperparametersNEpochs1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&createFineTuningJobRequestHyperparametersNEpochs1); err == nil {
		u.CreateFineTuningJobRequestHyperparametersNEpochs1 = createFineTuningJobRequestHyperparametersNEpochs1
		u.Type = CreateFineTuningJobRequestHyperparametersNEpochsTypeCreateFineTuningJobRequestHyperparametersNEpochs1
		return nil
	}

	integer := new(int64)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&integer); err == nil {
		u.Integer = integer
		u.Type = CreateFineTuningJobRequestHyperparametersNEpochsTypeInteger
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CreateFineTuningJobRequestHyperparametersNEpochs) MarshalJSON() ([]byte, error) {
	if u.CreateFineTuningJobRequestHyperparametersNEpochs1 != nil {
		return json.Marshal(u.CreateFineTuningJobRequestHyperparametersNEpochs1)
	}

	if u.Integer != nil {
		return json.Marshal(u.Integer)
	}

	return nil, nil
}

// CreateFineTuningJobRequestHyperparameters - The hyperparameters used for the fine-tuning job.
type CreateFineTuningJobRequestHyperparameters struct {
	// The number of epochs to train the model for. An epoch refers to one
	// full cycle through the training dataset.
	//
	NEpochs *CreateFineTuningJobRequestHyperparametersNEpochs `json:"n_epochs,omitempty"`
}

func (o *CreateFineTuningJobRequestHyperparameters) GetNEpochs() *CreateFineTuningJobRequestHyperparametersNEpochs {
	if o == nil {
		return nil
	}
	return o.NEpochs
}

// CreateFineTuningJobRequestModel2 - The name of the model to fine-tune. You can select one of the
// [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).
type CreateFineTuningJobRequestModel2 string

const (
	CreateFineTuningJobRequestModel2Babbage002 CreateFineTuningJobRequestModel2 = "babbage-002"
	CreateFineTuningJobRequestModel2Davinci002 CreateFineTuningJobRequestModel2 = "davinci-002"
	CreateFineTuningJobRequestModel2Gpt35Turbo CreateFineTuningJobRequestModel2 = "gpt-3.5-turbo"
)

func (e CreateFineTuningJobRequestModel2) ToPointer() *CreateFineTuningJobRequestModel2 {
	return &e
}

func (e *CreateFineTuningJobRequestModel2) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "babbage-002":
		fallthrough
	case "davinci-002":
		fallthrough
	case "gpt-3.5-turbo":
		*e = CreateFineTuningJobRequestModel2(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFineTuningJobRequestModel2: %v", v)
	}
}

type CreateFineTuningJobRequest struct {
	// The hyperparameters used for the fine-tuning job.
	Hyperparameters *CreateFineTuningJobRequestHyperparameters `json:"hyperparameters,omitempty"`
	// The name of the model to fine-tune. You can select one of the
	// [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).
	//
	Model interface{} `json:"model"`
	// A string of up to 40 characters that will be added to your fine-tuned model name.
	//
	// For example, a `suffix` of "custom-model-name" would produce a model name like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.
	//
	Suffix *string `json:"suffix,omitempty"`
	// The ID of an uploaded file that contains training data.
	//
	// See [upload file](/docs/api-reference/files/upload) for how to upload a file.
	//
	// Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.
	//
	// See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
	//
	TrainingFile string `json:"training_file"`
	// The ID of an uploaded file that contains validation data.
	//
	// If you provide this file, the data is used to generate validation
	// metrics periodically during fine-tuning. These metrics can be viewed in
	// the fine-tuning results file.
	// The same data should not be present in both train and validation files.
	//
	// Your dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.
	//
	// See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
	//
	ValidationFile *string `json:"validation_file,omitempty"`
}

func (o *CreateFineTuningJobRequest) GetHyperparameters() *CreateFineTuningJobRequestHyperparameters {
	if o == nil {
		return nil
	}
	return o.Hyperparameters
}

func (o *CreateFineTuningJobRequest) GetModel() interface{} {
	if o == nil {
		return nil
	}
	return o.Model
}

func (o *CreateFineTuningJobRequest) GetSuffix() *string {
	if o == nil {
		return nil
	}
	return o.Suffix
}

func (o *CreateFineTuningJobRequest) GetTrainingFile() string {
	if o == nil {
		return ""
	}
	return o.TrainingFile
}

func (o *CreateFineTuningJobRequest) GetValidationFile() *string {
	if o == nil {
		return nil
	}
	return o.ValidationFile
}
