// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeleteAssistantResponseObject string

const (
	DeleteAssistantResponseObjectAssistantDeleted DeleteAssistantResponseObject = "assistant.deleted"
)

func (e DeleteAssistantResponseObject) ToPointer() *DeleteAssistantResponseObject {
	return &e
}

func (e *DeleteAssistantResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "assistant.deleted":
		*e = DeleteAssistantResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAssistantResponseObject: %v", v)
	}
}

type DeleteAssistantResponse struct {
	Deleted bool                          `json:"deleted"`
	ID      string                        `json:"id"`
	Object  DeleteAssistantResponseObject `json:"object"`
}

func (o *DeleteAssistantResponse) GetDeleted() bool {
	if o == nil {
		return false
	}
	return o.Deleted
}

func (o *DeleteAssistantResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteAssistantResponse) GetObject() DeleteAssistantResponseObject {
	if o == nil {
		return DeleteAssistantResponseObject("")
	}
	return o.Object
}
