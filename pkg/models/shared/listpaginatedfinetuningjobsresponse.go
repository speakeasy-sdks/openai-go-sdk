// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ListPaginatedFineTuningJobsResponseObject string

const (
	ListPaginatedFineTuningJobsResponseObjectList ListPaginatedFineTuningJobsResponseObject = "list"
)

func (e ListPaginatedFineTuningJobsResponseObject) ToPointer() *ListPaginatedFineTuningJobsResponseObject {
	return &e
}

func (e *ListPaginatedFineTuningJobsResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "list":
		*e = ListPaginatedFineTuningJobsResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPaginatedFineTuningJobsResponseObject: %v", v)
	}
}

type ListPaginatedFineTuningJobsResponse struct {
	Data    []FineTuningJob                           `json:"data"`
	HasMore bool                                      `json:"has_more"`
	Object  ListPaginatedFineTuningJobsResponseObject `json:"object"`
}

func (o *ListPaginatedFineTuningJobsResponse) GetData() []FineTuningJob {
	if o == nil {
		return []FineTuningJob{}
	}
	return o.Data
}

func (o *ListPaginatedFineTuningJobsResponse) GetHasMore() bool {
	if o == nil {
		return false
	}
	return o.HasMore
}

func (o *ListPaginatedFineTuningJobsResponse) GetObject() ListPaginatedFineTuningJobsResponseObject {
	if o == nil {
		return ListPaginatedFineTuningJobsResponseObject("")
	}
	return o.Object
}
