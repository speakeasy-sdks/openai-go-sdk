// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateEditResponseFinishReason - The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
// `length` if the maximum number of tokens specified in the request was reached,
// or `content_filter` if content was omitted due to a flag from our content filters.
type CreateEditResponseFinishReason string

const (
	CreateEditResponseFinishReasonStop   CreateEditResponseFinishReason = "stop"
	CreateEditResponseFinishReasonLength CreateEditResponseFinishReason = "length"
)

func (e CreateEditResponseFinishReason) ToPointer() *CreateEditResponseFinishReason {
	return &e
}

func (e *CreateEditResponseFinishReason) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stop":
		fallthrough
	case "length":
		*e = CreateEditResponseFinishReason(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateEditResponseFinishReason: %v", v)
	}
}

type CreateEditResponseChoices struct {
	// The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
	// `length` if the maximum number of tokens specified in the request was reached,
	// or `content_filter` if content was omitted due to a flag from our content filters.
	//
	FinishReason CreateEditResponseFinishReason `json:"finish_reason"`
	// The index of the choice in the list of choices.
	Index int64 `json:"index"`
	// The edited result.
	Text string `json:"text"`
}

func (o *CreateEditResponseChoices) GetFinishReason() CreateEditResponseFinishReason {
	if o == nil {
		return CreateEditResponseFinishReason("")
	}
	return o.FinishReason
}

func (o *CreateEditResponseChoices) GetIndex() int64 {
	if o == nil {
		return 0
	}
	return o.Index
}

func (o *CreateEditResponseChoices) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}

// CreateEditResponseObject - The object type, which is always `edit`.
type CreateEditResponseObject string

const (
	CreateEditResponseObjectEdit CreateEditResponseObject = "edit"
)

func (e CreateEditResponseObject) ToPointer() *CreateEditResponseObject {
	return &e
}

func (e *CreateEditResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "edit":
		*e = CreateEditResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateEditResponseObject: %v", v)
	}
}

// CreateEditResponse
//
// Deprecated type: This will be removed in a future release, please migrate away from it as soon as possible.
type CreateEditResponse struct {
	// A list of edit choices. Can be more than one if `n` is greater than 1.
	Choices []CreateEditResponseChoices `json:"choices"`
	// The Unix timestamp (in seconds) of when the edit was created.
	Created int64 `json:"created"`
	// The object type, which is always `edit`.
	Object CreateEditResponseObject `json:"object"`
	// Usage statistics for the completion request.
	Usage CompletionUsage `json:"usage"`
}

func (o *CreateEditResponse) GetChoices() []CreateEditResponseChoices {
	if o == nil {
		return []CreateEditResponseChoices{}
	}
	return o.Choices
}

func (o *CreateEditResponse) GetCreated() int64 {
	if o == nil {
		return 0
	}
	return o.Created
}

func (o *CreateEditResponse) GetObject() CreateEditResponseObject {
	if o == nil {
		return CreateEditResponseObject("")
	}
	return o.Object
}

func (o *CreateEditResponse) GetUsage() CompletionUsage {
	if o == nil {
		return CompletionUsage{}
	}
	return o.Usage
}
