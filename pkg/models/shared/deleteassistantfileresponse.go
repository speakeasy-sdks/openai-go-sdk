// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeleteAssistantFileResponseObject string

const (
	DeleteAssistantFileResponseObjectAssistantFileDeleted DeleteAssistantFileResponseObject = "assistant.file.deleted"
)

func (e DeleteAssistantFileResponseObject) ToPointer() *DeleteAssistantFileResponseObject {
	return &e
}

func (e *DeleteAssistantFileResponseObject) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "assistant.file.deleted":
		*e = DeleteAssistantFileResponseObject(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAssistantFileResponseObject: %v", v)
	}
}

// DeleteAssistantFileResponse - Deletes the association between the assistant and the file, but does not delete the [File](/docs/api-reference/files) object itself.
type DeleteAssistantFileResponse struct {
	Deleted bool                              `json:"deleted"`
	ID      string                            `json:"id"`
	Object  DeleteAssistantFileResponseObject `json:"object"`
}

func (o *DeleteAssistantFileResponse) GetDeleted() bool {
	if o == nil {
		return false
	}
	return o.Deleted
}

func (o *DeleteAssistantFileResponse) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeleteAssistantFileResponse) GetObject() DeleteAssistantFileResponseObject {
	if o == nil {
		return DeleteAssistantFileResponseObject("")
	}
	return o.Object
}
