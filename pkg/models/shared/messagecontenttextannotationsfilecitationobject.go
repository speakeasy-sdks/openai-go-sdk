// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FileCitation struct {
	// The ID of the specific File the citation is from.
	FileID string `json:"file_id"`
	// The specific quote in the file.
	Quote string `json:"quote"`
}

func (o *FileCitation) GetFileID() string {
	if o == nil {
		return ""
	}
	return o.FileID
}

func (o *FileCitation) GetQuote() string {
	if o == nil {
		return ""
	}
	return o.Quote
}

// MessageContentTextAnnotationsFileCitationObjectType - Always `file_citation`.
type MessageContentTextAnnotationsFileCitationObjectType string

const (
	MessageContentTextAnnotationsFileCitationObjectTypeFileCitation MessageContentTextAnnotationsFileCitationObjectType = "file_citation"
)

func (e MessageContentTextAnnotationsFileCitationObjectType) ToPointer() *MessageContentTextAnnotationsFileCitationObjectType {
	return &e
}

func (e *MessageContentTextAnnotationsFileCitationObjectType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "file_citation":
		*e = MessageContentTextAnnotationsFileCitationObjectType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageContentTextAnnotationsFileCitationObjectType: %v", v)
	}
}

// MessageContentTextAnnotationsFileCitationObject - A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the "retrieval" tool to search files.
type MessageContentTextAnnotationsFileCitationObject struct {
	EndIndex     int64        `json:"end_index"`
	FileCitation FileCitation `json:"file_citation"`
	StartIndex   int64        `json:"start_index"`
	// The text in the message content that needs to be replaced.
	Text string `json:"text"`
	// Always `file_citation`.
	Type MessageContentTextAnnotationsFileCitationObjectType `json:"type"`
}

func (o *MessageContentTextAnnotationsFileCitationObject) GetEndIndex() int64 {
	if o == nil {
		return 0
	}
	return o.EndIndex
}

func (o *MessageContentTextAnnotationsFileCitationObject) GetFileCitation() FileCitation {
	if o == nil {
		return FileCitation{}
	}
	return o.FileCitation
}

func (o *MessageContentTextAnnotationsFileCitationObject) GetStartIndex() int64 {
	if o == nil {
		return 0
	}
	return o.StartIndex
}

func (o *MessageContentTextAnnotationsFileCitationObject) GetText() string {
	if o == nil {
		return ""
	}
	return o.Text
}

func (o *MessageContentTextAnnotationsFileCitationObject) GetType() MessageContentTextAnnotationsFileCitationObjectType {
	if o == nil {
		return MessageContentTextAnnotationsFileCitationObjectType("")
	}
	return o.Type
}
